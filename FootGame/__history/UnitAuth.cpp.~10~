//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "UnitAuth.h"
#include "UnitMenu.cpp"
//#include "Profile.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
TFormAuth *FormAuth;
//---------------------------------------------------------------------------
__fastcall TFormAuth::TFormAuth(TComponent* Owner)
	: TForm(Owner)
{
}

class TPlayer {
public:
	Player();
	string name;
	string surname;
	int level;
	int speed;
};

TPlayer::Player()
{
	name = "";
	surname = "";
	level = 0;
	speed = 0;
}

class TProfile {
public:
	string name;
	int level;
	int cash;
	int wins;
	TPlayer Team[3];
	void write(ofstream& ss);
	void read(ifstream& ss);
};

void TProfile::write(ofstream& ss)
{
	ss << name << " " << level << " " << cash << " " << wins << " ";
	for (int i = 0; i < 3; i++) {
		ss << Team[i].name << " " << Team[i].surname << " " << Team[i].level << " " << Team[i].speed;
		if (i < 2) ss << " ";
	}
}

void TProfile::read(ifstream& ss)
{
	string str;
	string tmp;
	ss >> name >> level >> cash >> wins;
	for (int i = 0; i < 3; i++)
		ss >> Team[i].name >> Team[i].surname >> Team[i].level >> Team[i].speed;
}

class TProfiles {
private:
	vector<TProfile> user;
public:
	TProfiles();
	string filename;
	void out();
	void in();
	bool IsExist(string name);
	bool reg(TProfile prfl);
	TProfile GetUser(int PID);
	int log(string name);
	int length();
};

TProfiles::TProfiles()
{
	filename = "db.bin";
}

void TProfiles::out()
{
	ofstream ss(filename.c_str(), std::ofstream::out | std::ofstream::trunc);
	for (int i = 0; i < user.size(); i++)
	{
		user[i].write(ss);
		if (i != user.size() - 1) ss << endl;
	}
	user.clear();
	ss.close();
}

void TProfiles::in()
{
	ifstream ss(filename.c_str());
	TProfile tmp;
	user.clear();
	while (!ss.eof())
	{
		tmp.read(ss);
		user.push_back(tmp);
	}
	ss.close();
}

bool TProfiles::IsExist(string name)
{
	for (int i = 0; i < user.size(); i++)
		if (user[i].name == name)
			return true;
	return false;
}

bool TProfiles::reg(TProfile prfl)
{
	if (!IsExist(prfl.name))
	{
		user.push_back(prfl);
		return true;
	} else {
		return false;
	}
}

int TProfiles::log(string name)
{
	for (int i = 0; i < user.size(); i++)
		if (user[i].name == name)
			return i;
	return -1;
}

int TProfiles::length()
{
	return user.size();
}

TProfile TProfiles::GetUser(int PID)
{
	return user[PID];
}

string UnicodeToString(UnicodeString us) {
	string result = AnsiString(us.t_str()).c_str();
	return result;
}
//---------------------------------------------------------------------------

void __fastcall TFormAuth::ButtonLoginClick(TObject *Sender)
{
	string username = UnicodeToString(EditUsername->Text);
	FormMenu->PID = FormMenu->Profiles.log(username);
	if (FormMenu->PID > - 1) {
		string msg = "Вы были успешно авторизированы под ником " + username;
		//FormMenu->LabelUser->Text = username.c_str();
		ShowMessage(msg.c_str());
	} else {
		string msg = "Пользователя с ником " + username + " не существует. Сперва нужно зарегистрироваться.";
		ShowMessage(msg.c_str());
	}
}
//---------------------------------------------------------------------------


void __fastcall TFormAuth::FormShow(TObject *Sender)
{
	Label1->Text = ("Всего пользователей: " + ToStr(FormMenu->Profiles.length())).c_str();
}
//---------------------------------------------------------------------------

void __fastcall TFormAuth::ButtonRegisterClick(TObject *Sender)
{
	TProfile profile;
	profile.name = UnicodeToString(EditUsername->Text);
	profile.level = 0;
	profile.cash = 3000;
	profile.wins = 0;
	profile.Team[0].name = "Иван";
	profile.Team[0].surname = "Петрович";
	profile.Team[0].level = 1;
	profile.Team[0].speed = 5;

	profile.Team[1].name = "Артем";
	profile.Team[1].surname = "Черных";
	profile.Team[1].level = 1;
	profile.Team[1].speed = 5;

	profile.Team[2].name = "Николай";
	profile.Team[2].surname = "Победоносный";
	profile.Team[2].level = 1;
	profile.Team[2].speed = 5;

	if (FormMenu->Profiles.reg(profile)) {
		string msg = "Вы были успешно зарегистрированы под ником " + profile.name;
		ShowMessage(msg.c_str());
	} else {
		string msg = "Пользователя с ником " + profile.name + " уже существует. Можете войти.";
		ShowMessage(msg.c_str());
	}
	Label1->Text = ("Всего пользователей: " + ToStr(FormMenu->Profiles.length())).c_str();
}
//---------------------------------------------------------------------------

